@using TG.Blazor.IndexedDB
@using YokaiTE.Component
@using YokaiTE.Interfaces
@inject IndexedDBManager DbManager
@inject IDocumentService DocumentService

<div class="modal-back">
    <div class="modal">
        <div class="modal-top-container">
            <h1 class="modal-name">Renomear arquivo</h1>
            <button @onclick="OnCancel">
                <img src="svg/close.svg" width="16" height="16" alt="Fechar"/>
            </button>
        </div>
        <div class="w-100">
            <NormalInput Value="@Document.Title" ValueChanged="OnTitleChanged"></NormalInput>
        </div>
        <div class="button-container">
            <button @onclick="OnCancel" class="cancel-btn">Cancelar</button>
            <button @onclick="Rename" class="confirm-btn">Renomear</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public DocumentMetadata Document { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private async Task Rename()
    {
        // Carrega o documento completo
        var fullDocument = await DocumentService.LoadAsync(Document.Id);
        if (fullDocument != null)
        {
            // Atualiza o título
            fullDocument.Title = Document.Title;
            // Salva usando o DocumentService que atualiza tanto o documento quanto os metadados
            await DocumentService.SaveAsync(fullDocument);
        }
        
        await OnClose.InvokeAsync();
    }

    private async Task OnCancel()
    {
        await OnClose.InvokeAsync();
    }

    private void OnTitleChanged(string title)
    {
        Document.Title = title;
    }
}