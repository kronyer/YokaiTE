@using YokaiTE.Component

@if (Visible)
{
    <div class="modal-back">
        <div class="modal">
            <div class="modal-top-container">
                <span class="modal-name">Criar novo arquivo</span>
                <button @onclick="OnCancel">
                    <img src="svg/close.svg" width="16" height="16" alt="Fechar"/>
                </button>
            </div>
            <div class="first-input-row">
                <div style="width:60%">
                    <NormalInput Placeholder="Título" Value="@Title" ValueChanged="OnTitleChanged" Error="@TitleError"></NormalInput>
                </div>
                <div style="width:40%">
                    <ColorSelect Label="Cor"
                                 Options="ColorOptions"
                                 @bind-Value="SelectedColor"/>
                </div>

            </div>
            <div class="w-100">
                <NormalSelect Label="Idioma"
                              Options="IdiomaOptions"
                              @bind-Value="Language"/>
            </div>
            <div class="button-container">
                <button @onclick="OnCancel" class="cancel-btn">Cancelar</button>
                <button @onclick="OnConfirm" class="confirm-btn">Criar</button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool Visible { get; set; }
    [Parameter] public EventCallback<bool> VisibleChanged { get; set; }
    [Parameter] public EventCallback<Document> OnSave { get; set; }

    private string TitleError { get; set; } = string.Empty;

    private List<NormalSelect.SelectOption> IdiomaOptions =
    [
        new("pt-BR", "pt-BR"),
        new("en-US", "en-US"),
        new("es-ES", "es-ES")
    ];

    private List<NormalSelect.SelectOption> ColorOptions = new()
    {
        new("#F2F2F2", "Branco"),
        new("#EDE7D5", "Amarelo Claro"),
        new("#D5E5ED", "Azul Claro"),
        new("#EDD5DB", "Vermelho Claro"),
        new("#D5EDD5", "Verde Claro"),
        new("#E9D5ED", "Rosa Claro"),

        new("#1F1F1F", "Marrom Escuro"),
        new("#2F1706", "Marrom Claro"),
        new("#06212F", "Azul Marinho"),
        new("#300612", "Vinho"),
        new("#032503", "Verde Escuro"),
        new("#2C0633", "Roxo"),
    };

    private string Title { get; set; } = string.Empty;
    private string Language { get; set; } = string.Empty;
    private string SelectedColor { get; set; } = "#F2F2F2";
    private const bool IsSimpleDocument = true;

    private void OnInitialize()
    {
        SelectedColor = "#f2f2f2";
    }

    private async Task OnConfirm()
    {

        if (!ValidateInputs())
        {
            return;
        }

        await OnSave.InvokeAsync(new Document
        {
            Title = Title,
            CreatedAt = DateTime.Now,
            LastModified = DateTime.Now,
            BackgroundColor = SelectedColor,
            IsSimple = IsSimpleDocument
        });
        await VisibleChanged.InvokeAsync(false);
    }

    private bool ValidateInputs()
    {
        if (!string.IsNullOrEmpty(Title)) return true;
        TitleError = "O título é obrigatório";
        return false;

    }

    private async Task OnCancel()
    {
        await VisibleChanged.InvokeAsync(false);
    }

    private void OnTitleChanged(string title)
    {
        Title = title;
    }

}