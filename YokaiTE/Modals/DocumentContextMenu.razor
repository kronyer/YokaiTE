@if (Visible)
{
    <div @oncontextmenu:preventDefault="true" 
         @oncontextmenu="OnBackdropClick"
         class="modal-back" @onclick="OnBackdropClick">
        <div class="context-menu-modal" style="top:@TopPx; left:@LeftPx;" @onclick:stopPropagation>
            <button class="context-btn rename" @onclick="Rename">
                <img src="svg/pencil.svg" width="16" height="16" alt="Renomear" />
                <span>
                    Renomear
                </span>
            </button>
            <button class="context-btn delete" @onclick="Delete">
                <img src="svg/trash.svg" width="16" height="16" alt="Renomear" />
                <span>
                    Excluir
                </span>
            </button>
        </div>
    </div>
}

@code {
    [Parameter] public bool Visible { get; set; }
    [Parameter] public EventCallback<bool> VisibleChanged { get; set; }
    [Parameter] public EventCallback OnRename { get; set; }
    [Parameter] public EventCallback OnDelete { get; set; }
    [Parameter] public int Top { get; set; }
    [Parameter] public int Left { get; set; }

    private string TopPx => $"{Top}px";
    private string LeftPx => $"{Left}px";

    private async Task OnBackdropClick()
    {
        await VisibleChanged.InvokeAsync(false);
    }

    private async Task Rename()
    {
        await OnRename.InvokeAsync();
        await VisibleChanged.InvokeAsync(false);
    }

    private async Task Delete()
    {
        await OnDelete.InvokeAsync();
        await VisibleChanged.InvokeAsync(false);
    }
}