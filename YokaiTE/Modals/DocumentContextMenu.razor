@if (Visible)
{
    <div @oncontextmenu:preventDefault="true" 
         @oncontextmenu="OnBackdropClick"
         class="modal-back" @onclick="OnBackdropClick">
        <div class="context-menu-modal" style="top:@TopPx; left:@LeftPx;" @onclick:stopPropagation>
            <button class="context-btn rename" @onclick="Rename">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                    <g clip-path="url(#clip0_2_456)">
                        <path d="M13.5 13.5H6L2.53188 10.0319" stroke="#181818" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M10.25 5.75L4.25 11.75" stroke="#181818" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M6 13.5H3C2.86739 13.5 2.74021 13.4473 2.64645 13.3536C2.55268 13.2598 2.5 13.1326 2.5 13V10.2069C2.50006 10.0744 2.55266 9.94745 2.64625 9.85375L10.3538 2.14625C10.4475 2.05255 10.5746 1.99992 10.7072 1.99992C10.8397 1.99992 10.9669 2.05255 11.0606 2.14625L13.8538 4.9375C13.9474 5.03126 14.0001 5.15839 14.0001 5.29094C14.0001 5.42349 13.9474 5.55062 13.8538 5.64438L6 13.5Z" stroke="#181818" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M8.5 4L12 7.5" stroke="#181818" stroke-linecap="round" stroke-linejoin="round"/>
                    </g>
                    <defs>
                        <clipPath id="clip0_2_456">
                            <rect width="16" height="16" fill="white"/>
                        </clipPath>
                    </defs>
                </svg>
                <span>
                    Renomear
                </span>
            </button>
            <button class="context-btn delete" @onclick="Delete">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                    <g clip-path="url(#clip0_2_470)">
                        <path d="M13.5 3.5H2.5" stroke="#AF0E0E" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M6.5 6.5V10.5" stroke="#AF0E0E" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M9.5 6.5V10.5" stroke="#AF0E0E" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M12.5 3.5V13C12.5 13.1326 12.4473 13.2598 12.3536 13.3536C12.2598 13.4473 12.1326 13.5 12 13.5H4C3.86739 13.5 3.74021 13.4473 3.64645 13.3536C3.55268 13.2598 3.5 13.1326 3.5 13V3.5" stroke="#AF0E0E" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M10.5 3.5V2.5C10.5 2.23478 10.3946 1.98043 10.2071 1.79289C10.0196 1.60536 9.76522 1.5 9.5 1.5H6.5C6.23478 1.5 5.98043 1.60536 5.79289 1.79289C5.60536 1.98043 5.5 2.23478 5.5 2.5V3.5" stroke="#AF0E0E" stroke-linecap="round" stroke-linejoin="round"/>
                    </g>
                    <defs>
                        <clipPath id="clip0_2_470">
                            <rect width="16" height="16" fill="white"/>
                        </clipPath>
                    </defs>
                </svg>
                <span>
                    Excluir
                </span>
            </button>
        </div>
    </div>
}

@code {
    [Parameter] public bool Visible { get; set; }
    [Parameter] public EventCallback<bool> VisibleChanged { get; set; }
    [Parameter] public EventCallback OnRename { get; set; }
    [Parameter] public EventCallback OnDelete { get; set; }
    [Parameter] public int Top { get; set; }
    [Parameter] public int Left { get; set; }

    private string TopPx => $"{Top}px";
    private string LeftPx => $"{Left}px";

    private async Task OnBackdropClick()
    {
        await VisibleChanged.InvokeAsync(false);
    }

    private async Task Rename()
    {
        await OnRename.InvokeAsync();
        await VisibleChanged.InvokeAsync(false);
    }

    private async Task Delete()
    {
        await OnDelete.InvokeAsync();
        await VisibleChanged.InvokeAsync(false);
    }
}